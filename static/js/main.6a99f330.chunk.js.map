{"version":3,"sources":["Message.js","Data.js","Bot.js","Chat.js","App.js","index.js"],"names":["Message","props","imgOrder","order","cls_nm","imgSrc","sender","className","src","alt","style","message","time","Data","createdAt","_id","getDataFromServer","Bot","hello","hi","hii","helo","halo","howareyou","iamalsofine","goodmorning","goodafternoon","goodnight","bye","botmsg","newMsg","replace","toLowerCase","hasOwnProperty","Chat","useState","oldData","setData","state","setstate","map","msg_obj","moment","fromNow","action","onSubmit","e","preventDefault","type","name","placeholder","value","onChange","event","target","onClick","trim","msgObj","format","length","old","setTimeout","a","bot_msg","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a99f330.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Message = (props) => {\r\n\r\n  let imgOrder = { order: 0 };\r\n  let cls_nm = \"msg-container agent\";\r\n  let imgSrc = \"https://icon-library.com/images/avatar-icon-images/avatar-icon-images-4.jpg\";\r\n  if (props.sender === \"user\") {\r\n    imgOrder = { order: 2 };\r\n    cls_nm = \"msg-container user\";\r\n    imgSrc = \"https://image.freepik.com/free-vector/mysterious-mafia-man-smoking-cigarette_52683-34828.jpg\";\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className={cls_nm}>\r\n        <div className=\"msg-line\">\r\n          <img src={imgSrc} alt={props.sender} className=\"image\" style={imgOrder} />\r\n          <p>{props.message}</p>\r\n        </div>\r\n        <small className=\"time\">{props.time}</small>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Message;\r\n","const Data = [\r\n    {\r\n      message: \"Hi user\",\r\n      createdAt: \"2021-09-14T13:23:02.298Z\",\r\n      sender: \"agent\",\r\n      _id: 1,\r\n    },\r\n    {\r\n      message: \"How are you doing today\",\r\n      createdAt: \"2021-09-14T13:23:02.298Z\",\r\n      sender: \"user\",\r\n      _id: 2,\r\n    },\r\n    {\r\n      message: \"I am good, how about you\",\r\n      createdAt: \"2021-09-14T13:23:02.298Z\",\r\n      sender: \"agent\",\r\n      _id: 3,\r\n    },\r\n    {\r\n      message: \"I am good, thanks for asking\",\r\n      createdAt: \"2021-09-14T13:23:02.298Z\",\r\n      sender: \"user\",\r\n      _id: 4,\r\n    },\r\n    {\r\n      message: \"How can I help you today ?\",\r\n      createdAt: \"2021-09-14T13:23:02.298Z\",\r\n      sender: \"agent\",\r\n      _id: 5,\r\n    },\r\n  ];\r\n\r\n  function getDataFromServer(){\r\n    return Data;\r\n  }\r\n\r\nexport default getDataFromServer;","const Bot = {\r\n    hello : \"hello\",\r\n    hi : \"hello\",\r\n    hii : \"hello\",\r\n    helo : \"hello\",\r\n    halo : \"hello\",\r\n    howareyou : \"I am fine. What about you?\",\r\n    iamalsofine : \"Okay!! 😊\",\r\n    goodmorning : \"Good Morning  🛣\",\r\n    goodafternoon : \"Good Afternoon 🏜\",\r\n    goodnight : \"Good Night ✨\",\r\n    bye : \"Bye 👋\",\r\n    \r\n\r\n}\r\n\r\n// Here botmsg is getting data as message and returning key value of Bot.\r\n\r\nconst botmsg = (message)=>{\r\n    let newMsg = message.replace(/[? ]/gi,'').toLowerCase();\r\n    if( Bot.hasOwnProperty(newMsg) ) {\r\n        return Bot[newMsg];\r\n       \r\n    }\r\n    else{\r\n        return \"Didn't get you.\"\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default botmsg;","import React, { useState } from \"react\";\r\nimport Message from \"./Message\";\r\nimport getDataFromServer from \"./Data\";\r\nimport botmsg from \"./Bot\";\r\nimport moment from \"moment\";\r\nimport ReactScrollableFeed from \"react-scrollable-feed\";\r\n\r\nconst Chat = () => {\r\n  const [oldData, setData] = useState(\"\");\r\n  const [state, setstate] = useState(getDataFromServer());\r\n\r\n  const typeMsg = (event) => {\r\n    setData(event.target.value);\r\n  };\r\n\r\n  const sendMsg = () => {\r\n    if (oldData.trim() !== \"\") {\r\n      let msgObj = {\r\n        message: oldData,\r\n        createdAt: moment().format(),\r\n        sender: \"user\",\r\n        _id: state.length + 1,\r\n      };\r\n       setstate((old) => {\r\n        return [...old, msgObj];\r\n      });\r\n\r\n      // Bot to send message. Here botmsg is importing data from Bot.js and it will be sended to user as agent after 2 second.\r\n      setTimeout(async () => {\r\n      let bot_msg ={\r\n        message : await botmsg(oldData),\r\n        createdAt: moment().format(),\r\n          sender: \"agent\",\r\n          _id: state.length + 2,\r\n      }\r\n      setstate((old) => {\r\n        return [...old, bot_msg];\r\n      });\r\n    }, 2000);\r\n  }\r\n    setData(\"\");\r\n  };\r\n\r\n  const onsubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {/* All the html are written in JSX */}\r\n      <div className=\"container\">\r\n        {/* Profile : It contain profile pic and name */}\r\n        <div className=\"profile\">\r\n          <img\r\n            src=\"https://icon-library.com/images/avatar-icon-images/avatar-icon-images-4.jpg\"\r\n            alt=\"\"\r\n            className=\"profile-pic\"\r\n          />\r\n          <span className=\"profile-name\">Agent</span>\r\n        </div>\r\n        {/* Messaages : It will contain all the messages only */}\r\n        <div className=\"messages\">\r\n          <div className=\"inhert\">\r\n            {/* ReactScrollableFeed is use to scroll the messages automatically */}\r\n          <ReactScrollableFeed className=\"messages\">\r\n            {/* Map method is sending the data of every message to Message component */}\r\n          {state.map((msg_obj) => {\r\n            return (\r\n              <Message\r\n                key = {msg_obj._id}\r\n                message={msg_obj.message}\r\n                time={moment(msg_obj.createdAt).fromNow()}\r\n                sender={msg_obj.sender}\r\n              />\r\n            );\r\n          })}\r\n          </ReactScrollableFeed>\r\n          </div>\r\n        </div>\r\n          {/* Form contain input where user can type message and button to send message */}\r\n          <form action=\"\" className=\"input-btn\" onSubmit={onsubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"msg\"\r\n              placeholder=\"Enter your message\"\r\n              value={oldData}\r\n              onChange={typeMsg}\r\n            />\r\n            <button type=\"submit\" className=\"send\" onClick={sendMsg}>\r\n              Send\r\n            </button>\r\n          </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// Exporting the Chat to App.js\r\nexport default Chat;\r\n","import React from \"react\";\nimport Chat from \"./Chat\";\n\nconst App = () =>{\n\n  return (\n    <>\n    \n      <Chat />\n     \n    </>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}